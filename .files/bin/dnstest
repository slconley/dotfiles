#!/usr/bin/env bash

# stolen/modified from here: https://github.com/cleanbrowsing/dnsperftest
# source of additional pub servers: 
#   - https://public-dns.info/
#   - https://www.lifewire.com/free-and-public-dns-servers-2626062
#   - https://www.techradar.com/news/best-dns-server

command -v bc > /dev/null || { echo "bc was not found. Please install bc."; exit 1; }
{ command -v drill > /dev/null && dig=drill; } || { command -v dig > /dev/null && dig=dig; } || { echo "dig was not found. Please install dnsutils."; exit 1; }



NAMESERVERS=`cat /etc/resolv.conf | grep ^nameserver | cut -d " " -f 2 | sed 's/\(.*\)/&#&/'`

PROVIDERS="
9.9.9.9#quad9-0
149.112.112.112#quad9-1
1.0.0.1#cloudflare-nofilter-0
1.1.1.1#cloudflare-nofilter-1
185.228.168.9#cleanbrowsing-base-0
185.228.169.9#cleanbrowsing-base-1
185.228.168.168#cleanbrowsing-family-0
185.228.169.168#cleanbrowsing-family-1
185.228.168.10#cleanbrowsing-adult-0
185.228.169.11#cleanbrowsing-adult-1
176.103.130.130#adguard-adblock-0
176.103.130.131#adguard-adblock-1
176.103.130.132#adguard-family_protection-0
176.103.130.134#adguard-family_protection-1
4.2.2.1#level3
8.8.8.8#google-0
8.8.4.4#google-1
80.80.80.80#freenom
208.67.222.123#opendns
199.85.126.20#norton
77.88.8.7#yandex
156.154.70.3#neustar
8.26.56.26#comodo
"


# Domains to test. Duplicated domains are ok
DOMAINS2TEST="www.google.com amazon.com facebook.com www.youtube.com www.reddit.com  wikipedia.org twitter.com gmail.com www.google.com whatsapp.com"


for p in $NAMESERVERS $PROVIDERS; do
  pip=${p%%#*}
  pname=${p##*#}
  echo provider/ip: $pname/$pip
done


totaldomains=0
printf "%-30s" ""
for d in $DOMAINS2TEST; do
  totaldomains=$((totaldomains + 1))
  printf "%-8s" "test$totaldomains"
done
printf "%-8s" "Average"
echo ""


for p in $NAMESERVERS $PROVIDERS; do
  pip=${p%%#*}
  pname=${p##*#}
  ftime=0

  printf "%-30s" "$pname"
  for d in $DOMAINS2TEST; do
    ttime=`$dig +tries=1 +time=2 +stats @$pip $d |grep "Query time:" | cut -d : -f 2- | cut -d " " -f 2`
    if [ -z "$ttime" ]; then
      #let's have time out be 1s = 1000ms
      ttime=1000
    elif [ "x$ttime" = "x0" ]; then
      ttime=1
    fi

    printf "%-8s" "$ttime ms"
    ftime=$((ftime + ttime))
  done
  avg=`bc -lq <<< "scale=2; $ftime/$totaldomains"`

  echo "  $avg"
done


exit 0;
